package uk.gov.justice.hmpps.prison.repository.sql

enum class SentenceRepositorySql(val sql: String) {
  GET_BOOKING_MAIN_OFFENCES(
    """
        SELECT OCH.OFFENDER_BOOK_ID BOOKING_ID,
        OFFS.DESCRIPTION     OFFENCE_DESCRIPTION,
        OCH.OFFENCE_CODE,
        OCH.STATUTE_CODE
        FROM OFFENDER_CHARGES OCH
        INNER JOIN OFFENCES OFFS ON OFFS.OFFENCE_CODE = OCH.OFFENCE_CODE AND OFFS.STATUTE_CODE = OCH.STATUTE_CODE
        WHERE OCH.OFFENDER_BOOK_ID = :bookingId
        AND OCH.MOST_SERIOUS_FLAG = :mostSerious
        AND OCH.CHARGE_STATUS = :chargeStatus
        ORDER BY CAST(COALESCE(OFFS.SEVERITY_RANKING, :severityRanking) AS INT)
    """,
  ),

  GET_BOOKING_MAIN_OFFENCES_MULTIPLE(
    """
        SELECT OCH.OFFENDER_BOOK_ID BOOKING_ID,
        OFFS.DESCRIPTION     OFFENCE_DESCRIPTION,
        OCH.OFFENCE_CODE,
        OCH.STATUTE_CODE
        FROM OFFENDER_CHARGES OCH
        INNER JOIN OFFENCES OFFS ON OFFS.OFFENCE_CODE = OCH.OFFENCE_CODE AND OFFS.STATUTE_CODE = OCH.STATUTE_CODE
                WHERE OCH.OFFENDER_BOOK_ID in (:bookingIds)
        AND OCH.MOST_SERIOUS_FLAG = :mostSerious
        AND OCH.CHARGE_STATUS = :chargeStatus
        ORDER BY OCH.OFFENDER_BOOK_ID, OCH.offence_date
    """,
  ),

  GET_OFFENCES(
    """
        SELECT OCH.OFFENDER_BOOK_ID  AS BOOKING_ID,
        OCH.OFFENCE_DATE,
        OCH.OFFENCE_RANGE_DATE,
        OFFS.DESCRIPTION      AS OFFENCE_DESCRIPTION,
        OCH.MOST_SERIOUS_FLAG AS MOST_SERIOUS,
        OCH.OFFENCE_CODE,
        OCH.STATUTE_CODE,
        ORC1.CONVICTION_FLAG   AS PRIMARY_RESULT_CONVICTION,
        ORC2.CONVICTION_FLAG   AS SECONDARY_RESULT_CONVICTION,
        ORC1.DESCRIPTION       AS PRIMARY_RESULT_DESCRIPTION,
        ORC2.DESCRIPTION       AS SECONDARY_RESULT_DESCRIPTION,
        OCH.RESULT_CODE_1      AS PRIMARY_RESULT_CODE,
        OCH.RESULT_CODE_2      AS SECONDARY_RESULT_CODE,
        CEC.EVENT_DATE AS COURT_DATE,
        OCH.CASE_ID
        FROM OFFENDER_CHARGES OCH
        INNER JOIN OFFENCES OFFS        ON OFFS.OFFENCE_CODE = OCH.OFFENCE_CODE AND OFFS.STATUTE_CODE = OCH.STATUTE_CODE
                INNER JOIN OFFENDER_BOOKINGS OB ON OB.OFFENDER_BOOK_ID = OCH.OFFENDER_BOOK_ID
                INNER JOIN OFFENDERS            ON OFFENDERS.OFFENDER_ID = OB.OFFENDER_ID
        LEFT JOIN OFFENCE_RESULT_CODES ORC1 ON OCH.RESULT_CODE_1 = ORC1.RESULT_CODE
                LEFT JOIN OFFENCE_RESULT_CODES ORC2 ON OCH.RESULT_CODE_2 = ORC2.RESULT_CODE
                LEFT JOIN ( SELECT max(EVENT_DATE) as event_date, OFFENDER_CHARGE_ID
        from COURT_EVENT_CHARGES CEC inner join COURT_EVENTS CE on CEC.EVENT_ID = CE.EVENT_ID
        group by CEC.OFFENDER_CHARGE_ID  ) CEC on OCH.OFFENDER_CHARGE_ID = CEC.OFFENDER_CHARGE_ID
        WHERE OFFENDERS.OFFENDER_ID_DISPLAY = :offenderNo
        AND ( :convictionsOnly = 'N' OR (
        ORC1.CONVICTION_FLAG = 'Y'
        OR ORC2.CONVICTION_FLAG = 'Y'
        ))
        -- Avoid dups from merges (from NART team)
        AND NOT (OCH.CREATE_USER_ID = 'SYS' AND OCH.AUDIT_MODULE_NAME = 'MERGE')
        ORDER BY OCH.offence_date
    """,
  ),

  GET_OFFENCES_FOR_BOOKING(
    """
        SELECT OCH.OFFENDER_BOOK_ID  AS BOOKING_ID,
        OCH.OFFENCE_DATE,
        OCH.OFFENCE_RANGE_DATE,
        OFFS.DESCRIPTION      AS OFFENCE_DESCRIPTION,
        OCH.MOST_SERIOUS_FLAG AS MOST_SERIOUS,
        OCH.OFFENCE_CODE,
        OCH.STATUTE_CODE,
        ORC1.CONVICTION_FLAG   AS PRIMARY_RESULT_CONVICTION,
        ORC2.CONVICTION_FLAG   AS SECONDARY_RESULT_CONVICTION,
        ORC1.DESCRIPTION       AS PRIMARY_RESULT_DESCRIPTION,
        ORC2.DESCRIPTION       AS SECONDARY_RESULT_DESCRIPTION,
        OCH.RESULT_CODE_1      AS PRIMARY_RESULT_CODE,
        OCH.RESULT_CODE_2      AS SECONDARY_RESULT_CODE,
        CEC.EVENT_DATE AS COURT_DATE,
        OCH.CASE_ID
        FROM OFFENDER_CHARGES OCH
        INNER JOIN OFFENCES OFFS        ON OFFS.OFFENCE_CODE = OCH.OFFENCE_CODE AND OFFS.STATUTE_CODE = OCH.STATUTE_CODE
                LEFT JOIN OFFENDER_CASES OC ON OC.CASE_ID = OCH.CASE_ID
                LEFT JOIN OFFENCE_RESULT_CODES ORC1 ON OCH.RESULT_CODE_1 = ORC1.RESULT_CODE
                LEFT JOIN OFFENCE_RESULT_CODES ORC2 ON OCH.RESULT_CODE_2 = ORC2.RESULT_CODE
                LEFT JOIN ( SELECT max(EVENT_DATE) as event_date, OFFENDER_CHARGE_ID
        from COURT_EVENT_CHARGES CEC inner join COURT_EVENTS CE on CEC.EVENT_ID = CE.EVENT_ID
        group by CEC.OFFENDER_CHARGE_ID  ) CEC on OCH.OFFENDER_CHARGE_ID = CEC.OFFENDER_CHARGE_ID
        WHERE OCH.OFFENDER_BOOK_ID = :bookingId AND OC.CASE_STATUS = 'A' AND OCH.CHARGE_STATUS = 'A'
        AND ( :convictionsOnly = 'N' OR (
        ORC1.CONVICTION_FLAG = 'Y'
        OR ORC2.CONVICTION_FLAG = 'Y'
        ))
        -- Avoid dups from merges (from NART team)
        AND NOT (OCH.CREATE_USER_ID = 'SYS' AND OCH.AUDIT_MODULE_NAME = 'MERGE')
        ORDER BY OCH.offence_date
    """,
  ),

  GET_BOOKING_CONFIRMED_RELEASE_DATE(
    """
        SELECT RELEASE_DATE
                FROM OFFENDER_RELEASE_DETAILS
                WHERE OFFENDER_BOOK_ID = :bookingId
    """,
  ),
}
